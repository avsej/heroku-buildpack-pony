#!/bin/sh
# usage: bin/compile <build-dir> <cache-dir> <env-dir>

set -e

mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
env_dir="${3}"
buildpack=$(cd "$(dirname $0)/.." && pwd)

steptxt="----->"
YELLOW='\033[1;33m'
RED='\033[1;31m'
NC='\033[0m' # No Color
CURL="curl -s -L --retry 15 --retry-delay 2" # retry for up to 30 seconds

warn() {
    echo -e "${YELLOW} !!    $@${NC}"
}

err() {
    echo -e >&2 "${RED} !!    $@${NC}"
}

step() {
    echo "$steptxt $@"
}

start() {
    echo -n "$steptxt $@... "
}

finished() {
    echo "done"
}

llvm_ver=3.9.0
llvm_pkg=clang+llvm-${llvm_ver}-x86_64-fedora23
llvm_archive=${llvm_pkg}.tar.xz
llvm_url=http://llvm.org/releases/${llvm_ver}/${llvm_archive}

ponyc_ver=0.8.0
ponyc_pkg=ponyc-${ponyc_ver}
ponyc_archive=${ponyc_pkg}.tar.gz
ponyc_url=https://github.com/ponylang/ponyc/archive/${ponyc_ver}.tar.gz

prefix="${cache}/${ponyc_ver}/prefix"
ponyc="${prefix}/bin/ponyc"

if test -d ${ponyc}
then
    step "Using $(${ponyc} --version)"
else
    rm -rf ${cache}/*
    mkdir -p "${cache}/${ponyc_ver}/build"

    cd "${cache}/${ponyc_ver}/build"
    start "Fetching tarball for LLVM ${llvm_ver}"
        ${CURL} -o${llvm_archive} ${llvm_url}
    finished
    start "Extracting ${llvm_archive}"
        tar Jxf ${llvm_archive}
        mv  ${llvm_pkg} ${prefix}
    finished

    start "Fetching tarball for ponyc ${ponyc_ver}"
        ${CURL} -o${ponyc_archive} ${ponyc_url}
    finished
    start "Extracting ${ponyc_archive}"
        tar zxf ${ponyc_archive}
    finished
    cd "${cache}/${ponyc_ver}/build/${ponyc_pkg}"
    start "Extracting ${ponyc_archive}"
    make install config=release LLVM_CONFIG=${prefix}/bin/llvm-config prefix=${prefix} use=pooltrack,telemetry
    finished
fi
